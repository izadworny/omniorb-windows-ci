version: 1.0.{build}

image: Visual Studio 2017

environment:
  matrix:
    - platform: win32
      ARCH: win32-msvc15
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 15 2017"
      MSVCVERSION: "v141"
      MSVCYEAR: "vs2017"
      MSVCABR: "15"
      VC_VER: 15.0
      PYTHONPATH: c:\Python36\
      PYTHONPATHOMNI: "/cygdrive/c/Python36/python"
      PYVER: "py36"
    - platform: x64
      ARCH: x64-msvc15
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      MSVCVERSION: "v141"
      MSVCYEAR: "vs2017"
      MSVCABR: "15"
      VC_VER: 15.0
      PYTHONPATH: c:\Python36-x64\
      PYTHONPATHOMNI: "/cygdrive/c/Python36-x64/python"
      PYVER: "py36"
    - platform: x64
      ARCH: x64-msvc15
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      MSVCVERSION: "v141"
      MSVCYEAR: "vs2017"
      MSVCABR: "15"
      VC_VER: 15.0
      PYTHONPATH: c:\Python35-x64\
      PYTHONPATHOMNI: "/cygdrive/c/Python35-x64/python"
      PYVER: "py35"
    - platform: win32
      ARCH: win32-msvc15
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 15 2017"
      MSVCVERSION: "v141"
      MSVCYEAR: "vs2017"
      MSVCABR: "15"
      VC_VER: 15.0
      PYTHONPATH: c:\Python35\
      PYTHONPATHOMNI: "/cygdrive/c/Python35/python"
      PYVER: "py35"
    - platform: win32
      ARCH: win32-msvc14
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 14 2015"
      MSVCVERSION: "v140"
      MSVCYEAR: "vs2015"
      MSVCABR: "14"
      VC_VER: 14.0
      PYTHONPATH: c:\Python36\
      PYTHONPATHOMNI: "/cygdrive/c/Python36/python"
      PYVER: "py36"
    - platform: x64
      ARCH: x64-msvc14
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 14 2015 Win64"
      MSVCVERSION: "v140"
      MSVCYEAR: "vs2015"
      MSVCABR: "14"
      VC_VER: 14.0
      PYTHONPATH: c:\Python36-x64\
      PYTHONPATHOMNI: "/cygdrive/c/Python36-x64/python"
      PYVER: "py36"
    - platform: x64
      ARCH: x64-msvc14
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 14 2015 Win64"
      MSVCVERSION: "v140"
      MSVCYEAR: "vs2015"
      MSVCABR: "14"
      VC_VER: 14.0
      PYTHONPATH: c:\Python35-x64\
      PYTHONPATHOMNI: "/cygdrive/c/Python35-x64/python"
      PYVER: "py35"
    - platform: win32
      ARCH: win32-msvc14
      configuration: Release
      CMAKE_GENERATOR: "Visual Studio 14 2015"
      MSVCVERSION: "v140"
      MSVCYEAR: "vs2015"
      MSVCABR: "14"
      VC_VER: 14.0
      PYTHONPATH: c:\Python35\
      PYTHONPATHOMNI: "/cygdrive/c/Python35/python"
      PYVER: "py35"
init:
  #RDP from start
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  # OmniOrb
  - cmd: cd "C:\projects\"
  - appveyor DownloadFile https://downloads.sourceforge.net/project/omniorb/omniORB/omniORB-4.2.1/omniORB-4.2.1-2.tar.bz2
  - cmd: 7z x omniORB-4.2.1-2.tar.bz2
  - cmd: 7z x omniORB-4.2.1-2.tar
  #Pthread-Win32
  - cmd: cd "C:\projects\"
  - cmd: md pthreads-win32
  - cmd: cd "C:\projects\"
  - appveyor DownloadFile "http://www.mirrorservice.org/sites/sources.redhat.com/pub/pthreads-win32/pthreads-w32-2-9-1-release.zip"
  - cmd: 7z -y x pthreads-w32-2-9-1-release.zip -oC:\projects\pthreads-win32\
  - cmd: cd "C:\projects\omniorb-windows-ci"
  
install:
  - cmd: set PYTHONPATH=%PYTHONPATH%
  - cmd: set path=%PATH%;c:\cygwin64\bin;%PYTHONPATH%
  - cmd: set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmd: if %ARCH%==win32-msvc14 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
  - cmd: if %ARCH%==x64-msvc14 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64
  - cmd: if %ARCH%==win32-msvc15 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - cmd: if %ARCH%==x64-msvc15 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - cmd: echo "Generator='%CMAKE_GENERATOR%'"
  - cmd: echo "Platform='%Platform%'"
  # OmniOrb
  - cmd: cd "C:\projects\omniORB-4.2.1"
  - cmd: set MSVCABR  = %MSVCABR%
  - cmd: set platform  = %platform%
  - cmd: if %ARCH%==win32-msvc15 set platform = win32
  - cmd: set PYTHONPATHOMNI = %PYTHONPATHOMNI%
  # Create 64 versions
  - cmd: copy c:\projects\omniORB-4.2.1\mk\platforms\x86_win32_vs_14.mk c:\projects\omniORB-4.2.1\mk\platforms\x86_win32_vs_15.mk
  - ps: (get-content c:\projects\omniORB-4.2.1\mk\platforms\x86_win32_vs_15.mk) | foreach-object {$_ -replace "_vc14", "_vc15"} | set-content c:\projects\omniORB-4.2.1\mk\platforms\x86_win32_vs_15.mk
  - cmd: copy c:\projects\omniORB-4.2.1\mk\platforms\x86_win32_vs_%MSVCABR%.mk c:\projects\omniORB-4.2.1\mk\platforms\x86_x64_vs_%MSVCABR%.mk
  # Add 64 links
  - ps: (get-content c:\projects\omniORB-4.2.1\mk\platforms\x86_x64_vs_${env:MSVCABR}.mk) | foreach-object {$_ -replace "-DEBUG", "-DEBUG -MACHINE:X64"} | set-content c:\projects\omniORB-4.2.1\mk\platforms\x86_x64_vs_${env:MSVCABR}.mk
  # Editing OmniOrb config
  - cmd: cd "C:\projects\omniORB-4.2.1\src"

  - ps: if (${env:ARCH} -Match "win32-msvc14") {(get-content c:\projects\omniORB-4.2.1\config\config.mk) | foreach-object {$_ -replace "\#platform = x86_win32_vs_${env:MSVCABR}", "platform = x86_${env:platform}_vs_${env:MSVCABR}"} | set-content c:\projects\omniORB-4.2.1\config\config.mk }
  - ps: if (${env:ARCH} -Match "win32-msvc14") {(get-content c:\projects\omniORB-4.2.1\mk\platforms\x86_${env:platform}_vs_${env:MSVCABR}.mk) | foreach-object {$_ -replace "\#PYTHON = /cygdrive/c/Python26/python", "PYTHON = ${env:PYTHONPATHOMNI}"} | set-content c:\projects\omniORB-4.2.1\mk\platforms\x86_${env:platform}_vs_$env:MSVCABR.mk }

  - ps: if (${env:ARCH} -Match "x64-msvc14") {(get-content c:\projects\omniORB-4.2.1\config\config.mk) | foreach-object {$_ -replace "\#platform = x86_win32_vs_${env:MSVCABR}", "platform = x86_${env:platform}_vs_${env:MSVCABR}"} | set-content c:\projects\omniORB-4.2.1\config\config.mk }
  - ps: if (${env:ARCH} -Match "x64-msvc14") {(get-content c:\projects\omniORB-4.2.1\mk\platforms\x86_${env:platform}_vs_${env:MSVCABR}.mk) | foreach-object {$_ -replace "\#PYTHON = /cygdrive/c/Python26/python", "PYTHON = ${env:PYTHONPATHOMNI}"} | set-content c:\projects\omniORB-4.2.1\mk\platforms\x86_${env:platform}_vs_$env:MSVCABR.mk }

  - ps: if (${env:ARCH} -Match "win32-msvc15") {(get-content c:\projects\omniORB-4.2.1\config\config.mk) | foreach-object {$_ -replace "\#platform = x86_win32_vs_${env:MSVCABR}", "platform = x86_win32_vs_${env:MSVCABR}"} | set-content c:\projects\omniORB-4.2.1\config\config.mk }
  - ps: if (${env:ARCH} -Match "win32-msvc15") {(get-content c:\projects\omniORB-4.2.1\mk\platforms\x86_win32_vs_${env:MSVCABR}.mk) | foreach-object {$_ -replace "\#PYTHON = /cygdrive/c/Python26/python", "PYTHON = ${env:PYTHONPATHOMNI}"} | set-content c:\projects\omniORB-4.2.1\mk\platforms\x86_win32_vs_$env:MSVCABR.mk }

  - ps: if (${env:ARCH} -Match "x64-msvc15") {(get-content c:\projects\omniORB-4.2.1\config\config.mk) | foreach-object {$_ -replace "\#platform = x86_win32_vs_${env:MSVCABR}", "platform = x86_${env:platform}_vs_${env:MSVCABR}"} | set-content c:\projects\omniORB-4.2.1\config\config.mk }
  - ps: if (${env:ARCH} -Match "x64-msvc15") {(get-content c:\projects\omniORB-4.2.1\mk\platforms\x86_${env:platform}_vs_${env:MSVCABR}.mk) | foreach-object {$_ -replace "\#PYTHON = /cygdrive/c/Python26/python", "PYTHON = ${env:PYTHONPATHOMNI}"} | set-content c:\projects\omniORB-4.2.1\mk\platforms\x86_${env:platform}_vs_$env:MSVCABR.mk }

  - cmd: type "c:\projects\omniORB-4.2.1\mk\platforms\x86_%platform%_vs_%MSVCABR%.mk"
  #- cmd: set path=%path%;c:\cygwin64\bin
  - cmd: if %ARCH%==win32-msvc14 set path=%path%;%PYTHONPATH%
  - cmd: if %ARCH%==x64-msvc14 set path=%path%;%PYTHONPATH%
  - cmd: if %ARCH%==win32-msvc15 set path=%path%;%PYTHONPATH%
  - cmd: if %ARCH%==x64-msvc15 set path=%path%;%PYTHONPATH%
  #- cmd: if %ARCH%==x64-msvc14 set path=%path%;c:\cygwin64\bin;%PYTHONPATH%
  #- cmd: set path=C:\Windows\Microsoft.NET\Framework\v4.0.30319;%path% 

build_script:
  - cmd: make export
after_build:
  - cmd: cd "C:\projects\omniorb-windows-ci"
  # Generating zip
  - cmd: 7z a omniorb-4.2.1_%ARCH%_%PYVER%.zip c:\projects\omniORB-4.2.1\bin\
  - cmd: 7z a omniorb-4.2.1_%ARCH%_%PYVER%.zip c:\projects\omniORB-4.2.1\lib\
  - cmd: 7z a omniorb-4.2.1_%ARCH%_%PYVER%.zip c:\projects\omniORB-4.2.1\include\

on_finish:
  #RDP for finish
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

artifacts:
  - path: ./*.zip
 
